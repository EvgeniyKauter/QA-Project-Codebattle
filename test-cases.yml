---
- summary: |
    Проверка успешной регистрации пользователя
  requirement: |
    При вводе всех неоходимых данных, пользователь успешно зарегистрирован
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    Логин = evgeniy
    Пароль = 265677
    Email = kauterevgeny@mail.ru
  steps: |
    - Вводим логин
    - Вводим email
    - Вводим пароль
    - Вводим подтверждения пароля
    - Нажать Submit
  expected-result: |
    Пользователь успешно зарегистрирован, открывается главная страница.

- summary: |
    Проверка на некорректный ввод email при регистрации
  requirement: |
    При вводе несуществующего email появляется уведомление об ошибке
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    Email = kauterevgen@mail.ru
  steps: |
    - Вводим email
    - Нажать Submit
  expected-result: |
    Рядом с полем для ввода email появляется надпись об ошибке ввода или несуществующем email

- summary: |
    Проверка на возможность регистрации при не заполненных полях в форме регистрации
  requirement: |
    При не заполненных полях регистрация невозможна
  prerequisites: |
    Открыта страница регистрации
  test-data: |
  steps: |
    - Нажать Submit
  expected-result: |
    Рядом с каждым полем в форме регистрации появляется уведомление о необходимости заполнения

- summary: |
    Проверка успешного входа пользователя с существующим логином и паролем
  requirement: |
    При верном вводе существующих логина и пароля, производится успешный вход, открывается главный экран
  prerequisites: |
    Открыта страница https://codebattle.hexlet.io
  test-data: |
    email = kauterevgeny@mail.ru
    Пароль = 265677
  steps: |
    - Нажать кнопку Sign in
    - Вводим email
    - Вводим пароль
  expected-result: |
    Осуществляется переход на главную страницу

- summary: |
    Проверка возможности входа с незарегистрированным логином
  requirement: |
    При вводе незарегистриорванного логина появляется уведомление об ошибке
  prerequisites: |
    Открыта страница входа в учётную запись
  test-data: |
    email = kauterevgen@mail.ru
    Пароль = 1
  steps: |
    - Вводим email
    - Вводим пароль
    - Нажать Submit
  expected-result: |
    Появляется оповещение о неправильно введённых данных, вход не выполнен

- summary: |
    Проверка возможности входа с неправильным паролем
  requirement: |
    При вводе несуществующих логине или пароле появляется уведомление об ошибке
  prerequisites: |
    Открыта страница входа в учётную запись
  test-data: |
    email = kauterevgeny@mail.ru
    Пароль = 1234
  steps: |
    - Вводим email
    - Вводим пароль
    - Нажать кнопку Submit
  expected-result: |
    Появляется оповещение о неправильно введённых данных, вход не выполне

- summary: |
    Проверка успешного создания новой игры с любым пользователем
  requirement: |
    При выборе соперника - любой пользователь, новая игра должна успешно создаваться
  prerequisites: |
    Открыта главная страница
  test-data: |
    Кнопка создания игры = Создать игру
    Кнопка выбора уровня игры = Уровень 1
    Кнопка выбора типа соперника = С любым пользователем
    Кнопка контроля времени = 10 минут
    Кнопка выбора типа задачи = math
    Кнопка выбора задачи = rect_area
  steps: |
    - Нажать на кнопку создания игры
    - Выбрать уровень игры
    - Выбрать тип соперника
    - Выбрать контроль времени
    - Выбрать тип задачи
    - Выбрать задачу
    - Нажать на кнопку создания
  expected-result: |
    Игра успешно создана, появляется в лобби, в списке других игр на главном экране

- summary: |
    Проверка успешного создания новой игры с ботом
  requirement: |
    При выборе соперника - с ботом, новая игра должна успешно создаваться
  prerequisites: |
    Открыта главная страница
  test-data: |
    Кнопка создания игры = Создать игру
    Кнопка выбора уровня игры = Уровень 1
    Кнопка выбора типа соперника = С ботом
    Кнопка контроля времени = 10 минут
    Кнопка выбора типа задачи = math
    Кнопка выбора задачи = rect_area
  steps: |
    - Нажать на кнопку создания игры
    - Выбрать уровень игры
    - Выбрать тип соперника
    - Выбрать контроль времени
    - Выбрать тип задачи
    - Выбрать задачу
    - Нажать на кнопку создания
  expected-result: |
    Игра успешно создана, появляется экран с для написания кода

- summary: |
    Проверка возможности выбора языка программирования
  requirement: |
    Пользователь должен иметь возможность выбирать язык программирования
  prerequisites: |
    Игра создана, открыт экран для написания кода
  test-data: |
    Кнопка выбора языка программирования = С++
  steps: |
    - Нажать на кнопку выбора языка и выбрать заданный
  expected-result: |
    Язык изменён на заданный

- summary: |
    Проверка видимости написания кода соперником
  requirement: |
    Пользователь должен видеть написания кода соперником
  prerequisites: |
    Создана игра с другом
  test-data: |
    Кнопка выбора языка = Node.js
    Запись = return width * length;
  steps: |
    - Попросить соперника выбрать заданный язык программирования
    - Попросить соперника сделать запись в 5 строке поля для ввода кода
  expected-result: |
    На ПК пользователя появляется запись сделанная соперником

- summary: |
    Проверка успешного завершения игры при правильном решении
  requirement: |
    При записи правильного решения, игра завершена, игрок побеждает
  prerequisites: |
    Игра создана, открыт экран для написания кода
  test-data: |
    Кнопка выбора языка = Node.js
    Запись = return width * length;
    Кнопка проверки решения = Проверить
  steps: |
    - Выбрать язык программирования
    - В поле для ввода кода, сделать в 5 строке заданную запись
    - Нажать на кнопку проверки решения
  expected-result: |
    Игра завершена, появляется уведомление о победе

- summary: |
    
  requirement: |
    
  prerequisites: |
    
  test-data: |
    
  steps: |
    
  expected-result: |
    


- summary: |
    
  requirement: |
    
  prerequisites: |
    
  test-data: |
    
  steps: |
    
  expected-result: |
    
